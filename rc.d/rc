#! /bin/bash
#
# rc            This file is responsible for starting/stopping
#               services when the runlevel changes.
#
# Original Author:       
#               Miquel van Smoorenburg, <miquels@drinkel.nl.mugnet.org>
#

# Now find out what the current and what the previous runlevel are.
argv1="$1"
set `/sbin/runlevel`
runlevel=$2
previous=$1
export runlevel previous

. /etc/init.d/functions

# See if we want to be in user confirmation mode
if [ "$previous" = "N" ]; then
	if grep -i confirm /proc/cmdline >/dev/null \
			|| [ -f /var/run/confirm ] ; then
		rm -f /var/run/confirm
		CONFIRM=yes
		echo $"Entering interactive startup"
	else
		CONFIRM=
		echo $"Entering non-interactive startup"
	fi
fi
export CONFIRM

# Get first argument. Set new runlevel to this argument.
[ -n "$argv1" ] && runlevel="$argv1"

# Is there an rc directory for this new runlevel?
[ -d /etc/rc$runlevel.d ] || exit 0

# First, run the KILL scripts.
for i in /etc/rc$runlevel.d/K*; do
	# Check if the script is there.
	[ -f $i ] || continue

	# Don't run [KS]??foo.{rpmsave,rpmorig} scripts
	[ "${i%.rpmsave}" != "$i" ] && continue
	[ "${i%.rpmorig}" != "$i" ] && continue
	[ "${i%.rpmnew}" != "$i" ] && continue

	# Check if the subsystem is already up.
	subsys=${i#/etc/rc$runlevel.d/K??}
	[ -f /var/lock/subsys/$subsys ] || \
		[ -f /var/lock/subsys/${subsys}.init ] || continue

	# Bring the subsystem down.
	if egrep -q "(killproc |action )" $i ; then
		$i stop
	else
		action $"Stopping $subsys: " $i stop
	fi
done

# Now run the START scripts.
for i in /etc/rc$runlevel.d/S*; do
	# Check if the script is there.
	[ -f $i ] || continue

	# Don't run [KS]??foo.{rpmsave,rpmorig} scripts
	[ "${i%.rpmsave}" != "$i" ] && continue
	[ "${i%.rpmorig}" != "$i" ] && continue
	[ "${i%.rpmnew}" != "$i" ] && continue

	# Check if the subsystem is already up.
	subsys=${i#/etc/rc$runlevel.d/S??}
	[ -f /var/lock/subsys/$subsys ] || \
		[ -f /var/lock/subsys/${subsys}.init ] && continue
		    
	# If we're in confirmation mode, get user confirmation
	if [ -n "$CONFIRM" ]; then
		confirm $subsys
		case $? in
			0) :;;
			2) CONFIRM=;;
			*) continue;;
		esac 
	fi

	# Bring the subsystem up.
	if [ "$subsys" = "halt" -o "$subsys" = "reboot" ]; then
		unset LANG
		unset LC_ALL
		exec $i start
	fi
	if egrep -q "(daemon |action )" $i \
			|| [ "$subsys" = "single" -o "$subsys" = "local" ]; then
		$i start
	else
		action $"Starting $subsys: " $i start
	fi
done
